version: '3.5'
services:
    nginx:
        restart: always
        build: nginx/
        depends_on:
            - orchestrator
        networks: 
            - "orch_net"
        ports:
            - "0.0.0.0:80:80"

    orchestrator:
        container_name: "orchestrator"
        restart: always
        build: orch/
        volumes: 
            - /var/run/docker.sock:/var/run/docker.sock 
        depends_on:
            - rabbitmq
            - zookeeper
            - orch_data
        networks: 
            - orch_net
        expose:
            - "5000"
        command: ['python','orchestrator.py']

    rabbitmq:
        image: "rabbitmq:3-management"
        hostname: "rabbitmq"
        networks: 
            - orch_net
        expose:
            - "15672"
            - "5672"
        ports:
            - "0.0.0.0:15672:15672"
            - "0.0.0.0:5672:5672"
        volumes: 
            - rabbitmq:/var/lib/rabbitmq
    zookeeper:
        container_name: "zookeeper"
        image: "zookeeper"
        networks: 
            - orch_net
        expose:
            - "2181"
            - "3888"
            - "8080"
        ports:
            - "0.0.0.0:2181:2181"
            - "0.0.0.0:3888:3888"
            - "0.0.0.0:8080:8080"

    orch_data:
        container_name: "orch_data"
        image: "mongo"
        networks: 
            - orch_net
        expose:
            - "27017"
        ports:
            - "0.0.0.0:27017:27017"

networks: 
    orch_net:
        name: orch_net

volumes: 
    rabbitmq:
        name: rabbitmq